Index: src/main/java/hkmu/wadd/config/SecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package hkmu.wadd.config;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\r\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\r\nimport org.springframework.security.core.userdetails.UserDetailsService;\r\nimport org.springframework.security.provisioning.JdbcUserDetailsManager;\r\nimport org.springframework.security.web.SecurityFilterChain;\r\n\r\nimport javax.sql.DataSource;\r\n\r\nimport static org.springframework.security.config.Customizer.withDefaults;\r\n\r\n@Configuration\r\n@EnableWebSecurity\r\npublic class SecurityConfig {\r\n    @Autowired\r\n    private DataSource dataSource;\r\n\r\n    @Bean\r\n    public UserDetailsService jdbcUserDetailsService() {\r\n        String usersByUsernameQuery\r\n                = \"SELECT username, password, true FROM users WHERE username=?\";\r\n        String authsByUsernameQuery\r\n                = \"SELECT username, role FROM user_roles WHERE username=?\";\r\n        JdbcUserDetailsManager users = new JdbcUserDetailsManager(dataSource);\r\n        users.setUsersByUsernameQuery(usersByUsernameQuery);\r\n        users.setAuthoritiesByUsernameQuery(authsByUsernameQuery);\r\n        return users;\r\n    }\r\n\r\n    @Bean\r\n    public SecurityFilterChain filterChain(HttpSecurity http)\r\n            throws Exception {\r\n        http\r\n                .authorizeHttpRequests(authorize -> authorize\r\n                        .requestMatchers(\"/guestbook/edit/**\", \"/guestbook/delete/**\").hasRole(\"ADMIN\")\r\n                        .requestMatchers(\"/guestbook/**\").hasAnyRole(\"USER\", \"ADMIN\")\r\n                        .anyRequest().permitAll()\r\n                )\r\n                .formLogin(form -> form\r\n                        .loginPage(\"/login\")\r\n                        .failureUrl(\"/login?error\")\r\n                        .usernameParameter(\"username\")\r\n                        .passwordParameter(\"password\")\r\n                        .permitAll()\r\n                )\r\n                .logout(logout -> logout\r\n                        .logoutUrl(\"/logout\")\r\n                        .logoutSuccessUrl(\"/login?logout\")\r\n                        .invalidateHttpSession(true)\r\n                        .deleteCookies(\"JSESSIONID\")\r\n                )\r\n                .rememberMe(remember -> remember\r\n                        .key(\"uniqueAndSecret\")\r\n                        .tokenValiditySeconds(86400)\r\n                        .rememberMeParameter(\"remember-me\")\r\n                )\r\n                .httpBasic(withDefaults());\r\n        return http.build();\r\n    }\r\n}
===================================================================
diff --git a/src/main/java/hkmu/wadd/config/SecurityConfig.java b/src/main/java/hkmu/wadd/config/SecurityConfig.java
--- a/src/main/java/hkmu/wadd/config/SecurityConfig.java	(revision 007ffb24fb87ec3813f4338b162193d90f826a3e)
+++ b/src/main/java/hkmu/wadd/config/SecurityConfig.java	(date 1743091067277)
@@ -31,6 +31,7 @@
         return users;
     }
 
+
     @Bean
     public SecurityFilterChain filterChain(HttpSecurity http)
             throws Exception {
